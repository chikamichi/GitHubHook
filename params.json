{"name":"GitHubHook","tagline":"GitHub Post-Receive Deployment Hook","body":"## GitHub Post-Receive Deployment Hook\r\n\r\nDeploying applications to development, staging and production never been so easy with GitHub Post-Receive Deployment Hook script!\r\n\r\n### Installation\r\n\r\nClone the script:\r\n\r\n<pre><code>$ <strong>git clone https://github.com/kwangchin/GitHubHook.git</strong>\r\n</code></pre>\r\n\r\nGo to your `GitHub repo` &gt; `Admin` &gt; `Service Hooks`, select `Post-Receive URLS` and enter your hook URL like this:\r\n\r\n![GitHub Post-Receive URLs](http://s23.postimage.org/r8eui3jdn/Git_Hub_Hook_01.png)\r\n\r\n### How It Works\r\n\r\nGitHub provides [Post-Receive Hooks](http://help.github.com/post-receive-hooks/) to allow HTTP callback with a HTTP Post. We then create a script for the callback to deploy the systems automatically.\r\n\r\nYou will need to create branches like `stage` and `prod` in Git before proceeding into the configurations.\r\n\r\nYou then can have a brief look into `hook.php`, a WebHook example provided for you to experience how simple the configurations are.\r\n\r\n<pre><code>&lt;?php\r\nrequire_once('class.GitHubHook.php');\r\n\r\n// Initiate the GitHub Deployment Hook\r\n$hook = new GitHubHook;\r\n\r\n// Enable the debug log (sent to error_log) \r\n$hook-&gt;enableDebug();\r\n\r\n// Adding `stage` branch to deploy for `staging` to path `/var/www/testhook/stage`\r\n$hook-&gt;addBranch('stage', 'staging', '/var/www/stage');\r\n\r\n// Adding `prod` branch to deploy for `production` to path `/var/www/testhook/prod`\r\n$hook-&gt;addBranch('prod', 'production', '/var/www/prod', array('user@gmail.com'));\r\n\r\n// Deploy the commits\r\n$hook-&gt;deploy();\r\n</code></pre>\r\n\r\nIn this example, we enabled the debug log for messages with timestamp. You can disable this by commenting or removing the line `$hook->enableDebug()`\r\n\r\nWe have a staging site and a production site in this example. You can add more branches easily with `$hook->addBranch()` method if you have more systems to deploy.\r\n\r\nWe then use `$hook->deploy()` to deploy the systems.\r\n\r\n## \r\n\r\n### Security\r\n\r\nWorry about securities? We have enabled IP check to allow only [GitHub hook addresses](https://help.github.com/articles/what-ip-addresses-does-github-use-that-i-should-whitelist) (CIDR notation):  `192.30.252.0/22` to deploy the systems. We also return a `404 Not Found` page when there is illegal access to the hook script.\r\n\r\nFor better security, try hiding this hook script in deep directories like `http://www.example.com/let/us/play/hide/and/seek/` and/or renaming the `hook.php` file into `a40b6cf7a5.php`.\r\n\r\n### For Developers\r\n\r\nWe are trying to make developers life easier. Kindly fork this on GitHub and submit your pull requests to help us.","google":"UA-33642901-1","note":"Don't delete this file! It's used internally to help with page regeneration."}